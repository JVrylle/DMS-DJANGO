# Generated by Django 5.1.7 on 2025-05-26 08:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('USER', 'User'), ('DENTIST', 'Dentist'), ('ADMIN', 'Admin')], max_length=10)),
                ('username', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('SYSTEM', 'System'), ('SECURITY', 'Security'), ('EVENT', 'Event'), ('EMERGENCY', 'Emergency')], max_length=10)),
                ('action_description', models.TextField()),
                ('affected_model', models.CharField(blank=True, max_length=100, null=True)),
                ('affected_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('redirect_url', models.URLField(blank=True, null=True)),
                ('type', models.CharField(choices=[('Account', 'Account'), ('Appointment', 'Appointment'), ('Reminder', 'Reminder'), ('Prescription', 'Prescription'), ('Smart Suggestions', 'Smart Suggestions'), ('Emergency', 'Emergency')], default='Account', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100)),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('birthdate', models.DateField()),
                ('age', models.PositiveIntegerField(default=0)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('religion', models.CharField(max_length=100)),
                ('nationality', models.CharField(max_length=100)),
                ('home_address', models.CharField(max_length=255)),
                ('occupation', models.CharField(max_length=100)),
                ('philhealth_no', models.IntegerField(blank=True, null=True)),
                ('dental_insurance', models.CharField(blank=True, max_length=254, null=True)),
                ('dental_insurance_effective_date', models.DateField(blank=True, null=True)),
                ('for_minors_parent_or_guardian_name', models.CharField(blank=True, max_length=255, null=True)),
                ('for_minors_parent_or_guardian_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('home_no', models.CharField(blank=True, max_length=20, null=True)),
                ('office_no', models.CharField(blank=True, max_length=20, null=True)),
                ('fax_no', models.CharField(blank=True, max_length=20, null=True)),
                ('cel_mobile_no', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=100)),
                ('referral_thanks', models.CharField(blank=True, max_length=255, null=True)),
                ('dental_consultation_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('prev_dentist', models.CharField(blank=True, max_length=100, null=True)),
                ('last_dental_visit', models.DateField(blank=True, null=True)),
                ('physician_name', models.CharField(blank=True, max_length=255, null=True)),
                ('physician_specialty', models.CharField(blank=True, max_length=100, null=True)),
                ('physician_office_address', models.CharField(blank=True, max_length=255, null=True)),
                ('physician_office_no', models.CharField(blank=True, max_length=100, null=True)),
                ('mi_isgoodhealth', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_under_medical_treatment', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_under_medical_treatment_followup', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_is_serious_illness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_serious_illness_followup', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_is_hospitalized', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_hospitalized_followup', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_is_taking_prescription', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_taking_prescription_followup', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_is_using_tobacco', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_using_dangerous_drugs', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_allergic', models.JSONField(blank=True, default=list, null=True)),
                ('mi_is_allergic_others', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_bleeding_time', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_is_pregnant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_nursing', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_is_birth_control', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, null=True)),
                ('mi_bloodtype', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_bloodpressure', models.CharField(blank=True, max_length=255, null=True)),
                ('mi_select_disease', models.JSONField(blank=True, default=list, null=True)),
                ('mi_select_disease_others', models.CharField(blank=True, max_length=255, null=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('claimed_existing_patient', models.BooleanField(blank=True, null=True)),
                ('has_answered_existing_patient', models.BooleanField(default=False)),
                ('digital_xrays', models.ImageField(blank=True, null=True, upload_to='xrays/')),
                ('patient_pictures', models.ImageField(blank=True, null=True, upload_to='pictures/')),
                ('patient_signatures', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('synced_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IntraoralExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teeth', models.JSONField(blank=True, default=list, null=True)),
                ('xray_taken', models.JSONField(blank=True, default=list, null=True)),
                ('xray_periapical', models.CharField(blank=True, max_length=255, null=True)),
                ('xray_taken_others', models.CharField(blank=True, max_length=255, null=True)),
                ('periodontal_screening', models.JSONField(blank=True, default=list, null=True)),
                ('occlusion', models.JSONField(blank=True, default=list, null=True)),
                ('appliances', models.JSONField(blank=True, default=list, null=True)),
                ('appliances_others', models.CharField(blank=True, max_length=255, null=True)),
                ('tmd', models.JSONField(blank=True, default=list, null=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dental.patient')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_alerts', to='dental.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Scheduled', 'Scheduled'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled'), ('No Show', 'No Show')], db_index=True, default='Scheduled', max_length=20)),
                ('purpose', models.CharField(choices=[('Oral Exam', 'Oral Exam'), ('Oral Propelaxis', 'Oral Propelaxis'), ('Tooth Restoration', 'Tooth Restoration'), ('Tooth Extraction', 'Tooth Extraction'), ('Orthodontic Treatment', 'Orthodontic Treatment'), ('Minor Surgical Treatment', 'Minor Surgical Treatment'), ('Fluoride Application', 'Fluoride Application'), ('Prosthodontic Treatment', 'Prosthodontic Treatment')], max_length=50)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('is_first_time_visit', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_appointments', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='dental.patient')),
            ],
            options={
                'verbose_name_plural': 'Appointments',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.TextField()),
                ('dosage', models.TextField()),
                ('instructions', models.TextField()),
                ('issued_date', models.DateField(auto_now_add=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='prescriptions/')),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='dental.patient')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_date', models.DateField(auto_now_add=True, null=True)),
                ('tooth_number', models.IntegerField(null=True)),
                ('treatment_procedure', models.TextField(null=True)),
                ('treatment_dentist', models.CharField(max_length=255, null=True)),
                ('amount_charged', models.IntegerField(null=True)),
                ('amount_paid', models.IntegerField(null=True)),
                ('balance', models.IntegerField(null=True)),
                ('next_appointment', models.DateField(max_length=255, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_records', to='dental.patient')),
            ],
        ),
    ]
